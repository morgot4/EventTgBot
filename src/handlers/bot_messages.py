from aiogram import Router, F
from aiogram.types import Message
from src.keyboards import reply, inline, builders
from src.utils.dbconnect import Request
from aiogram.fsm.context import FSMContext
from src.utils.states import OwnerCode, Form

router = Router()

@router.message()
async def echo(message: Message, request: Request, state: FSMContext):
    msg = message.text.lower()
    telegram_id = message.from_user.id
    is_user_owner = await request.is_owner(telegram_id)
    user_id = await request.get_id(telegram_id)
    if msg == "üîê—Å—Ç–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º":
        if is_user_owner:
            await message.answer(f"–í—ã —É–∂–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä", reply_markup=reply.main)
        else:
            await message.answer(f"–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞")
            await state.set_state(OwnerCode.get_code)

    elif msg == "‚ûï—Å–æ–∑–¥–∞—Ç—å":
        if is_user_owner:
            await state.set_state(Form.name)
            await message.answer(
                "üëã –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup=builders.profile(["‚¨ÖÔ∏è–ù–∞–∑–∞–¥"])
            )
        else:
            await message.answer(f"–¢–æ–ª—å–∫–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ!", reply_markup=reply.main)
    elif msg == "üìÉ–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è":
        await message.answer("üëá–í—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup=reply.main)
        await request.get_events_list(message=message)

    elif msg == "üë§–º–æ–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è":
        await message.answer("üëá–í–∞—à–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",  reply_markup=builders.profile(["‚¨ÖÔ∏è–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"]))
        await request.get_events_list(message=message, user_id=user_id)

    elif msg == "‚¨ÖÔ∏è–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=reply.main)

